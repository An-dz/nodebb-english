Openshift PaaS
===========

The following are installation instructions for the `Openshift <http://openshift.com>` PaaS.

Before we begin, you need to install rhc command-line at <https://developers.openshift.com/en/managing-client-tools.html>.

**Step 1:** Create a new application. This will create a git repository as well, keep this in mind.

.. code:: bash
	
	rhc app create nodebb nodejs-0.10

**Step 2:** Add cartridge Redis.

.. code:: bash
	
	rhc add-cartridge http://cartreflect-claytondev.rhcloud.com/reflect?github=smarterclayton/openshift-redis-cart -a nodebb

**Step 3:** Access SSH using this command. This will go in your app you just created.

.. code:: bash
	
	rhc app ssh -a nodebb
	
**Step 4:** Due to one of Openshift's demands, we have to know IP of your app, IP of redis database, PORT of redis database, and PASSWORD of redis database. Save them somewhere.

.. code:: bash

  echo $OPENSHIFT_NODEJS_IP && echo $REDIS_CLI
  
  
**Note:** If you're installing NodeBB with Redis for the first time it may be a good idea to clear Redis before you add NodeBB to Openshift! You can quickly do this here by accessing redis in Openshift and then using a flush command to empty that database.

.. code:: bash

  redis-cli $REDIS_CLI
  flushall
  
or...

.. code:: bash

   redis-cli $REDIS_CLI
   select db_number_of_your_choice
   flushdb
   
  
**Step 5:** Exit SSH using this command.

.. code:: bash

	exit

**Step 6:** You'll need clone NodeBB from Github to your app. The command git clone will not work with Openshift.

.. code:: bash
	
	cd nodebb && git remote add upstream -m master https://github.com/NodeBB/NodeBB.git

**Step 7:** Then pull the files from NodeBB's repository.

.. code:: bash
	
	git pull -s recursive -X theirs upstream v0.6.x
	
**Step 8:** Now you will need to commit and push files to your app's repository. Replace message with your message.

.. code:: bash

	git commit -a -m 'message' && git push

**Step 9:** Stop the application

.. code:: bash
	
	rhc app stop -a nodebb

**Step 10:** Access SSH again.

.. code:: bash
	
	rhc app ssh -a nodebb

**Step 10:** Edit the environnement NodeJS on the terminal with the SSH

.. code:: bash
	
	cd ~/nodejs/configuration && nano node.env
	
**Step 11:** Replace server.js by app.js and exit the editor

.. code:: bash
	
	ctrl + x

**Step 13:** In other terminal, start the application

.. code:: bash
	
	rhc app start -a nodebb

**Step 14:** Start the setup of NodeBB on the terminal with the SSH

.. code:: bash
	
	cd ~/app-root/repo && node app --setup

URL of this installation should be set to 'http://nodebb-username.rhcloud.com', replacing username with your username. 

Port number : 8080

Host IP or address of your Redis instance: Enter what your $REDIS_CLI value holds here found in step 4.

Host port of your Redis instance: Enter what your $REDIS_CLI value holds here found in step 4.

Redis Password: Enter what your $REDIS_CLI value holds here found in step 4.

**Step 15:** Manually Set the Bind Address for NodeJS

The last step in this process is changing the configuration file ( ~/app-root/repo/config.json ) that is
automatically generated by NodeBB

You'll want to add a new keyvalue pair for 'bind_address' which will be what your $OPENSHIFT_NODEJS_IP value is.
I've attached an example of what a config file may look like below

.. code:: json

    {
        "url": "http://nodebb-username.rhcloud.com:8080",
        "bind_address": "123.4.56.7",
        "secret": "its_a_secret!",
        "database": "redis",
        "redis": {
            "host": "123.4.56.8",
            "port": "16379",
            "password": "not_password",
            "database": "0"
        }
    }

**Step 16:** And the last one, in other terminal, restart the application

.. code:: bash
	
	rhc app restart -a nodebb

And then open http://nodebb-username.rhcloud.com in your browser.

Note
---------------------------------------
Restart NodeBB in the admin doesn't work. Use:

.. code:: bash
	
	rhc app restart -a nodebb
